[[plugins]]
repo  = 'Shougo/vimproc.vim'
build = 'make'
[[plugins]]
repo = 'prabirshrestha/async.vim'
[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim'
[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
[[plugins]]
repo = 'hashivim/vim-terraform'
[[plugins]]
repo = 'mattn/vim-lsp-settings'
[[plugins]]
repo = 'mattn/vim-goimports'
[[plugins]]
repo = 'hrsh7th/vim-vsnip'
[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
[[plugins]]
repo = 'simeji/winresizer'
[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
  nnoremap <silent> [Space]f
  \ <Cmd>Defx -listed -resume -buffer-name=win-`win_getid()`<CR>
'''
hook_source = '''
  call defx#custom#column('mark', {
    \ 'readonly_icon': '✗',
    \ 'selected_icon': '✓',
    \ })
  call defx#custom#column('icon', {
    \ 'directory_icon': '+',
    \ 'opened_icon': '-',
    \ 'root_icon': ' ',
    \ })
  call defx#custom#column('icon', {
    \ 'directory_icon': '▸ ',
    \ 'file_icon': '  ',
    \ 'opened_icon': '▾ ',
    \ 'root_icon': '  ',
    \ })
'''
[plugins.ftplugin]
defx = '''
  " Define mappings
  nnoremap <silent><buffer><expr> <CR>
  \ defx#is_binary() ?
  \ defx#do_action('execute_system') :
  \ defx#do_action('open')
  nnoremap <silent><buffer><expr> +
  \ defx#do_action('open', 'choose')
  nnoremap <silent><buffer><expr> c
  \ defx#do_action('copy')
  nnoremap <silent><buffer><expr> !
  \ defx#do_action('execute_command')
  nnoremap <silent><buffer><expr> &
  \ defx#do_action('execute_command', ['', 'async'])
  nnoremap <silent><buffer><expr> m
  \ defx#do_action('move')
  nnoremap <silent><buffer><expr> p
  \ defx#do_action('paste')
  nnoremap <silent><buffer><expr> l
  \ defx#do_action('open')
  nnoremap <silent><buffer><expr> E
  \ defx#do_action('open', 'vsplit')
  nnoremap <silent><buffer><expr> T
  \ defx#do_action('open', 'tabedit')
  nnoremap <silent><buffer><expr> L
  \ defx#do_action('link')
  nnoremap <silent><buffer><expr> P
  \ defx#do_action('preview')
  nnoremap <silent><buffer><expr> o
  \ defx#do_action('open_tree', ['nested', 'toggle'])
  nnoremap <silent><buffer><expr> O
  \ defx#do_action('open_tree', 'recursive')
  nnoremap <silent><buffer><expr> K
  \ defx#do_action('new_directory')
  nnoremap <silent><buffer><expr> N
  \ defx#do_action('new_file')
  nnoremap <silent><buffer><expr> NN
  \ defx#do_action('new_multiple_files')
  nnoremap <silent><buffer><expr> C
  \ defx#do_action('toggle_columns', 'indent:git:icons:filename:mark:type:size:time')
  nnoremap <silent><buffer><expr> S
  \ defx#do_action('toggle_sort', 'Time')
  nnoremap <silent><buffer><expr> se
  \ defx#do_action('add_session')
  nnoremap <silent><buffer><expr> sl
  \ defx#do_action('load_session')
  nnoremap <silent><buffer><expr> d
  \ defx#do_action('remove')
  nnoremap <silent><buffer><expr> r
  \ defx#do_action('rename')
  nnoremap <silent><buffer><expr> x
  \ defx#do_action('execute_system')
  nnoremap <silent><buffer><expr> >
  \ defx#do_action('toggle_ignored_files')
  nnoremap <silent><buffer><expr> .
  \ defx#do_action('repeat')
  nnoremap <silent><buffer><expr> yy
  \ defx#do_action('yank_path')
  nnoremap <silent><buffer><expr> h
  \ defx#do_action('cd', ['..'])
  nnoremap <silent><buffer><expr> ~
  \ defx#do_action('cd')
  nnoremap <silent><buffer><expr> \
  \ defx#do_action('cd', getcwd())
  nnoremap <silent><buffer><expr> q
  \ defx#do_action('quit')
  nnoremap <silent><buffer><expr> <Space>
  \ defx#do_action('toggle_select') . 'j'
  nnoremap <silent><buffer><expr> *
  \ defx#do_action('toggle_select_all')
  nnoremap <silent><buffer><expr> j
  \ line('.') == line('$') ? 'gg' : 'j'
  nnoremap <silent><buffer><expr> k
  \ line('.') == 1 ? 'G' : 'k'
  nnoremap <silent><buffer><expr> <C-l>
  \ defx#do_action('redraw')
  xnoremap <silent><buffer><expr> <CR>
  \ defx#do_action('toggle_select_visual')
  nnoremap <silent><buffer><expr> <C-g>
  \ defx#do_action('print')
  nnoremap <silent><buffer><expr> <Tab> winnr('$') != 1 ?
  \ '<Cmd>wincmd w<CR>' :
  \ '<Cmd>Defx -buffer-name=temp -split=vertical<CR>'
  nnoremap <silent><buffer> gr <Cmd>call denite#start(
  \ [{'name': 'grep', 'args': [map(defx#get_selected_candidates(),
  \ { _, val -> val['action__path'] })]}])<CR>
  nnoremap <silent><buffer><expr> cd
  \ defx#do_action('change_vim_cwd')
'''
[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  nnoremap <silent> gr
  \ <Cmd>Denite grep<CR>
  nnoremap <silent> gb
  \ <Cmd>Denite buffer<CR>
'''
[plugins.ftplugin]
denite = '''
  " Define mappings
  nnoremap <silent><buffer><expr> <CR>
  \ denite#do_map('do_action')
  nnoremap <silent><buffer><expr> f
  \ denite#do_map('do_action', 'defx')
  nnoremap <silent><buffer><expr> a
  \ denite#do_map('choose_action')
  nnoremap <silent><buffer><expr> d
  \ denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> e
  \ denite#do_map('do_action', 'open')
  nnoremap <silent><buffer><expr> E
  \ denite#do_map('do_action', 'vsplitswitch')
  nnoremap <silent><buffer><expr> T
  \ denite#do_map('do_action', 'tabswitch')
  nnoremap <silent><buffer><expr> p
  \ denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> P
  \ denite#do_map('do_action', 'preview_bat')
  nnoremap <silent><buffer><expr> N
  \ denite#do_map('do_action', 'new')
  nnoremap <silent><buffer><expr> q
  \ denite#do_map('quit')
  nnoremap <silent><buffer><expr> '
  \ denite#do_map('quick_move')
  nnoremap <silent><buffer><expr> i
  \ denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> <Space>
  \ denite#do_map('toggle_select').'j'
  nnoremap <silent><buffer><expr> r
  \ denite#do_map('do_action', 'quickfix')
  nnoremap <silent><buffer><expr> <C-r>
  \ denite#do_map('restore_sources')
  nnoremap <silent><buffer><expr> <C-l>
  \ denite#do_map('redraw')
'''
[[plugins]]
repo = 'ryanoasis/vim-devicons'
[[plugins]]
repo = 'kristijanhusak/defx-icons'
[[plugins]]
repo = 'kristijanhusak/defx-git'
[[plugins]]
repo = 'roxma/nvim-yarp'
[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
[[plugins]]
repo = 'Shougo/vimshell.vim'
[[plugins]]
repo = 'itchyny/lightline.vim'
[[plugins]]
repo = 'Shougo/neomru.vim'
[[plugins]]
repo = 'tomtom/tcomment_vim'
[[plugins]]
repo = 'tpope/vim-surround'
[[plugins]]
repo = 'Yggdroot/indentLine'
[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'
[[plugins]]
repo = 'ntpeters/vim-better-whitespace'
[[plugins]]
repo = 'tomasr/molokai'
[[plugins]]
repo = 'leafgarland/typescript-vim'
[[plugins]]
repo = 'airblade/vim-gitgutter'
[[plugins]]
repo = 'tpope/vim-fugitive'
[[plugins]]
repo = 'cespare/vim-toml'
[[plugins]]
repo = 'vim-airline/vim-airline-themes'
[[plugins]]
repo = 'vim-airline/vim-airline'
[[plugins]]
repo = 'vim-test/vim-test'
[[plugins]]
repo = 'towolf/vim-helm'
[[plugins]]
repo = 'Jagua/vim-denite-ghq'
[[plugins]]
repo = 'tyru/open-browser.vim'
[[plugins]]
repo = 'weirongxu/plantuml-previewer.vim'
[[plugins]]
repo = 'aklt/plantuml-syntax'
[[plugins]]
repo = 'voldikss/vim-floaterm'
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
[[plugins]]
repo = 'tyru/caw.vim'
[[plugins]]
repo = 'rhysd/git-messenger.vim'
[[plugins]]
repo = 'jiangmiao/auto-pairs'
[[plugins]]
repo = 'junegunn/gv.vim'
